@page
@model ColorSchemes
@{
    ViewData["Title"] = "CG | Color Schemes";
}

<link rel="stylesheet" href="css/color-schemes.css" asp-append-version="true"/>

<div class="row">
    <form id="color-schemes-form" method="post" enctype="multipart/form-data">
        <div class="row h-100">
            <!-- CMYK column -->
            <div class="col-sm-4">
                <div class="row align-content-center h-100">
                    <div class="d-flex flex-column">
                        <div class="mt-3">
                            <label asp-for="ViewModel.Cmyk" class="ms-3"></label>
                            <input value="@Model.ViewModel.Cmyk" type="color" readonly/>
                        </div>
                        <div class="mt-3">
                            <span class="d-inline-block width-10 mx-2">c</span>
                            <input id="c-input" asp-for="ViewModel.C" class="input-secondary width-50 mr-2" onchange="updateCRange()"/>
                            <input id="c-range" asp-for="ViewModel.C" type="range" min="0" max="100" step="1" class="w-50" onchange="updateCInput()"/>
                        </div>
                        <div class="mt-3">
                            <span class="d-inline-block width-10 mx-2">m</span>
                            <input id="m-input" asp-for="ViewModel.M" class="input-secondary width-50 mr-2" onchange="updateMRange()"/>
                            <input id="m-range" asp-for="ViewModel.M" type="range" min="0" max="100" step="1" class="w-50" onchange="updateMInput()"/>
                        </div>
                        <div class="mt-3">
                            <span class="d-inline-block width-10 mx-2">y</span>
                            <input id="y-input" asp-for="ViewModel.Y" class="input-secondary width-50 mr-2" onchange="updateYRange()"/>
                            <input id="y-range" asp-for="ViewModel.Y" type="range" min="0" max="100" step="1" class="w-50" onchange="updateYInput()"/>
                        </div>
                        <div class="mt-3">
                            <span class="d-inline-block width-10 mx-2">k</span>
                            <input id="k-input" asp-for="ViewModel.K" class="input-secondary width-50 mr-2" onchange="updateKRange()"/>
                            <input id="k-range" asp-for="ViewModel.K" type="range" min="0" max="100" step="1" class="w-50" onchange="updateKInput()"/>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Image column -->
            <div class="col-sm-4">
                <div class="row align-content-center h-100">
                    <div class="d-flex flex-column">
                        <div class="mt-1">
                            <input asp-for="ViewModel.ImageFile" type="file"/>
                        </div>
                        <div class="mt-2">
                            <img class="user-image" src="@Model.ViewModel.ImageFileRelativePath" alt="Image to edit"/>
                        </div>
                        <div class="mt-2 ms-3">
                            <span>Lightness by gray color:</span>
                        </div>
                        <div class="mt-2 ms-3">
                            <input id="gray-input" asp-for="ViewModel.GrayColorLightness" class="input-secondary width-50 mr-2" onchange="updateGrayRange()"/>
                            <input id="gray-range" asp-for="ViewModel.GrayColorLightness" type="range" min="-255" max="255" step="1" class="w-50" onchange="updateGrayInput()"/>
                        </div>
                        <div class="mt-2 ms-3">
                            <span class="d-inline-flex width-30 me-3">From:</span>
                            <input asp-for="ViewModel.ImageFromX" class="input-secondary width-50 mr-2"/>
                            <span>:</span>
                            <input asp-for="ViewModel.ImageFromY" class="input-secondary width-50 mr-2"/>
                        </div>
                        <div class="mt-2 ms-3">
                            <span class="d-inline-flex width-30 me-3">To:</span>
                            <input asp-for="ViewModel.ImageToX" class="input-secondary width-50 mr-2"/>
                            <span>:</span>
                            <input asp-for="ViewModel.ImageToY" class="input-secondary width-50 mr-2"/>
                        </div>
                    </div>
                </div>
            </div>
            <!-- HSL column -->
            <div class="col-sm-4">
                <div class="row align-content-center h-100">
                    <div class="d-flex flex-column">
                        <div class="mt-3">
                            <label asp-for="ViewModel.Hsl" class="ms-3"></label>
                            <input value="@Model.ViewModel.Hsl" type="color" readonly/>
                        </div>
                        <div class="mt-3">
                            <span class="d-inline-block width-10 mx-2">h</span>
                            <input id="h-input" asp-for="ViewModel.H" class="input-secondary width-50 mr-2" onchange="updateHRange()"/>
                            <input id="h-range" asp-for="ViewModel.H" type="range" min="0" max="360" step="1" class="w-50" onchange="updateHInput()"/>
                        </div>
                        <div class="mt-3">
                            <span class="d-inline-block width-10 mx-2">s</span>
                            <input id="s-input" asp-for="ViewModel.S" class="input-secondary width-50 mr-2" onchange="updateSRange()"/>
                            <input id="s-range" asp-for="ViewModel.S" type="range" min="0" max="100" step="1" class="w-50" onchange="updateSInput()"/>
                        </div>
                        <div class="mt-3">
                            <span class="d-inline-block width-10 mx-2">l</span>
                            <input id="l-input" asp-for="ViewModel.L" class="input-secondary width-50 mr-2" onchange="updateLRange()"/>
                            <input id="l-range" asp-for="ViewModel.L" type="range" min="0" max="100" step="1" class="w-50" onchange="updateLInput()"/>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
        <div class="row mt-1">
            <div class="d-flex justify-content-end">
                <button type="submit" class="btn button-primary mx-1">Generate</button>
                <a href="https://en.wikipedia.org/wiki/Color_scheme" target="_blank" 
                   class="btn button-secondary mx-1">Theory</a>
                <a href="#" class="btn button-secondary mx-1" onclick="copySite()">Share</a>
                <a href="@($"data:image/png;base64,{Convert.ToBase64String(Model.ViewModel.ImageBytes)}")" 
                   class="btn button-primary mx-1" download>Save</a>
            </div>
        </div>
    </form>
</div>

<script>
    function copySite() {
        navigator.clipboard.writeText('https://localhost:44371/ColorSchemes');    
    }
    function submitForm() {
        document.getElementById('color-schemes-form').submit();
    }
    
    // For input updates
    function updateCInput() {
        document.getElementById('c-input').value = document.getElementById('c-range').value;
        submitForm();
    }
    function updateMInput() {
        document.getElementById('m-input').value = document.getElementById('m-range').value;
        submitForm();
    }
    function updateYInput() {
        document.getElementById('y-input').value = document.getElementById('y-range').value;
        submitForm();
    }
    function updateKInput() {
        document.getElementById('k-input').value = document.getElementById('k-range').value;
        submitForm();
    }
    function updateHInput() {
        document.getElementById('h-input').value = document.getElementById('h-range').value;
        submitForm();
    }
    function updateSInput() {
        document.getElementById('s-input').value = document.getElementById('s-range').value;
        submitForm();
    }
    function updateLInput() {
        document.getElementById('l-input').value = document.getElementById('l-range').value;
        submitForm();
    }
    function updateGrayInput() {
        document.getElementById('gray-input').value = document.getElementById('gray-range').value;
        submitForm();
    }
    
    // For range updates
    function updateCRange() {
        document.getElementById('c-range').value = document.getElementById('c-input').value;
        submitForm();
    }
    function updateMRange() {
        document.getElementById('m-range').value = document.getElementById('m-input').value;
        submitForm();
    }
    function updateYRange() {
        document.getElementById('y-range').value = document.getElementById('y-input').value;
        submitForm();
    }
    function updateKRange() {
        document.getElementById('k-range').value = document.getElementById('k-input').value;
        submitForm();
    }
    function updateHRange() {
        document.getElementById('h-range').value = document.getElementById('h-input').value;
        submitForm();
    }
    function updateSRange() {
        document.getElementById('s-range').value = document.getElementById('s-input').value;
        submitForm();
    }
    function updateLRange() {
        document.getElementById('l-range').value = document.getElementById('l-input').value;
        submitForm();
    }
    function updateGrayRange() {
        document.getElementById('gray-range').value = document.getElementById('gray-input').value;
        submitForm();
    }
</script>